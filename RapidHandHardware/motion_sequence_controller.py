import math
import time
import argparse
from typing import List, Optional
from numpy import pi
from rapid_hand_control.servo_driver.rapid_driver import RapidDriver


class HandMotionController:
    def __init__(self, motor_port: str):
        self.rapid_hand = RapidDriver(port=motor_port, init_set=True)
        self.num_motors = 20
        self.control_values: List[float] = [0.0] * self.num_motors

        # Each tuple defines: (motor_id, start_time, end_time, start_pos, end_pos)
        self.motion_profiles: List[List[float]] = self._build_motion_profiles()

    def _build_motion_profiles(self) -> List[List[float]]:
        raw_profiles = [
            (1, 1, 1.7, 0, pi / 2),
            (2, 1, 1.7, 0, pi / 2),
            (3, 1, 1.7, 0, pi / 2),
            (5, 1.7, 2.4, 0, pi / 2),
            (6, 1.7, 2.4, 0, pi / 2),
            (7, 1.7, 2.4, 0, pi / 2),
            (9, 2.4, 3.1, 0, pi / 2),
            (10, 2.4, 3.1, 0, pi / 2),
            (11, 2.4, 3.1, 0, pi / 2),
            (13, 3.1, 3.8, 0, pi / 2),
            (14, 3.1, 3.8, 0, pi / 2),
            (15, 3.1, 3.8, 0, pi / 2),
            (1, 6, 7, pi / 2, 0),
            (2, 6, 7, pi / 2, 0),
            (3, 6, 7, pi / 2, 0),
            (5, 7, 8, pi / 2, 0),
            (6, 7, 8, pi / 2, 0),
            (7, 7, 8, pi / 2, 0),
            (9, 8, 9, pi / 2, 0),
            (10, 8, 9, pi / 2, 0),
            (11, 8, 9, pi / 2, 0),
            (13, 9, 10, pi / 2, 0),
            (14, 9, 10, pi / 2, 0),
            (15, 9, 10, pi / 2, 0),
            (1, 11, 11.5, 0, pi / 2),
            (2, 11, 11.5, 0, pi / 2),
            (3, 11, 11.5, 0, pi / 2),
            (5, 11, 11.5, 0, pi / 2),
            (6, 11, 11.5, 0, pi / 2),
            (7, 11, 11.5, 0, pi / 2),
            (9, 11, 11.5, 0, pi / 2),
            (10, 11, 11.5, 0, pi / 2),
            (11, 11, 11.5, 0, pi / 2),
            (13, 11, 11.5, 0, pi / 2),
            (14, 11, 11.5, 0, pi / 2),
            (15, 11, 11.5, 0, pi / 2),
            (16, 11, 11.5, 0, 0.9),
            (17, 11, 11.5, 0, pi / 2),
            (18, 11, 11.5, 0, 0.7),
            (19, 11, 11.5, 0, 0.7),
            (1, 11.5, 12.5, pi / 2, 0),
            (2, 11.5, 12.5, pi / 2, 0),
            (3, 11.5, 12.5, pi / 2, 0),
            (5, 11.5, 12.5, pi / 2, 0),
            (6, 11.5, 12.5, pi / 2, 0),
            (7, 11.5, 12.5, pi / 2, 0),
            (9, 11.5, 12.5, pi / 2, 0),
            (10, 11.5, 12.5, pi / 2, 0),
            (11, 11.5, 12.5, pi / 2, 0),
            (13, 11.5, 12.5, pi / 2, 0),
            (14, 11.5, 12.5, pi / 2, 0),
            (15, 11.5, 12.5, pi / 2, 0),
            (16, 11.5, 12.5, 0.9, 0),
            (17, 11.5, 12.5, pi / 2, 0),
            (18, 11.5, 12.5, 0.7, 0),
            (19, 11.5, 12.5, 0.7, 0),
            (1, 15, 15.8, 0, 1),
            (2, 15, 15.8, 0, 1),
            (3, 15, 15.8, 0, 1),
            (16, 15, 15.8, 0, 1.57),
            (17, 15, 15.8, 0, 1.4),
            (18, 15, 15.8, 0, 0.5),
            (19, 15, 15.8, 0, 0.9),
            (1, 16.2, 17, 1, 0),
            (2, 16.2, 17, 1, 0),
            (3, 16.2, 17, 1, 0),
            (16, 16.2, 17, 1.57, 0),
            (17, 16.2, 17, 1.4, 0),
            (18, 16.2, 17, 0.5, 0),
            (19, 16.2, 17, 0.9, 0),
            (5, 17, 17.8, 0, 1),
            (6, 17, 17.8, 0, 1),
            (7, 17, 17.8, 0, 1),
            (16, 17, 17.8, 0, 1.1),
            (17, 17, 17.8, 0, 1.4),
            (18, 17, 17.8, 0, 0.5),
            (19, 17, 17.8, 0, 0.9),
            (5, 18.2, 19, 1, 0),
            (6, 18.2, 19, 1, 0),
            (7, 18.2, 19, 1, 0),
            (16, 18.2, 19, 1.1, 0),
            (17, 18.2, 19, 1.4, 0),
            (18, 18.2, 19, 0.5, 0),
            (19, 18.2, 19, 0.9, 0),
            (9, 19, 19.8, 0, 1.1),
            (10, 19, 19.8, 0, 1.1),
            (11, 19, 19.8, 0, 1.1),
            (16, 19, 19.8, 0, 0.8),
            (17, 19, 19.8, 0, 1.4),
            (18, 19, 19.8, 0, 0.9),
            (19, 19, 19.8, 0, 0.5),
            (9, 20.2, 21, 1.1, 0),
            (10, 20.2, 21, 1.1, 0),
            (11, 20.2, 21, 1.1, 0),
            (16, 20.2, 21, 0.8, 0),
            (17, 20.2, 21, 1.4, 0),
            (18, 20.2, 21, 0.9, 0),
            (19, 20.2, 21, 0.5, 0),
            (13, 21, 21.8, 0, 1.2),
            (14, 21, 21.8, 0, 0.9),
            (15, 21, 21.8, 0, 1.1),
            (16, 21, 21.8, 0, 0.3),
            (17, 21, 21.8, 0, 1.57),
            (18, 21, 21.8, 0, 1.2),
            (19, 21, 21.8, 0, 0),
            (13, 22.2, 23, 1.2, 0),
            (14, 22.2, 23, 0.9, 0),
            (15, 22.2, 23, 1.1, 0),
            (16, 22.2, 23, 0.3, 0),
            (17, 22.2, 23, 1.57, 0),
            (18, 22.2, 23, 1.2, 0),
            (19, 22.2, 23, 0, 0),
            (1, 25, 25.8, 0, 1),
            (2, 25, 25.8, 0, 1),
            (3, 25, 25.8, 0, 1.4),
            (16, 25, 25.8, 0, 1.57),
            (17, 25, 25.8, 0, 1.4),
            (18, 25, 25.8, 0, 0.5),
            (19, 25, 25.8, 0, 0.9),
            (5, 25.8, 26.2, 0, 1),
            (6, 25.8, 26.2, 0, 1),
            (7, 25.8, 26.2, 0, 1.4),
            (16, 25.8, 26.2, 1.57, 1.1),
            (17, 25.8, 26.2, 1.57, 1.57),
            (18, 25.8, 26.2, 0.4, 0.6),
            (19, 25.8, 26.2, 0.6, 0.6),
            (9, 26.2, 26.6, 0, 1),
            (10, 26.2, 26.6, 0, 1),
            (11, 26.2, 26.6, 0, 1.4),
            (16, 26.2, 26.6, 1.1, 0.8),
            (17, 26.2, 26.6, 1.57, 1.57),
            (18, 26.2, 26.6, 0.2, 0.8),
            (19, 26.2, 26.6, 0.3, 0.5),
            (13, 26.6, 27, 0, 0.9),
            (14, 26.6, 27, 0, 1.3),
            (15, 26.6, 27, 0, 1.3),
            (16, 26.6, 27, 0.8, 0.5),
            (17, 26.6, 27, 1.57, 1.57),
            (18, 26.6, 27, 0.4, 1.2),
            (19, 26.6, 27, 0.3, 0),
            (1, 29, 30, 0, 0),
            (2, 29, 30, 0, 0),
            (3, 29, 30, 0, 0),
            (5, 29, 30, 0, 0),
            (6, 29, 30, 0, 0),
            (7, 29, 30, 0, 0),
            (9, 29, 30, 0, 0),
            (10, 29, 30, 0, 0),
            (11, 29, 30, 0, 0),
            (13, 29, 30, 0, 0),
            (14, 29, 30, 0, 0),
            (15, 29, 30, 0, 0),
            (16, 29, 30, 0, 0),
            (17, 29, 30, 0, 0),
            (18, 29, 30, 0, 0),
            (19, 29, 30, 0, 0),
            (1, 30, 31, 0, 1),
            (2, 30, 31, 0, 1),
            (3, 30, 31, 0, 0),
            (16, 30, 31, 0, 1.57),
            (17, 30, 31, 0, 1.4),
            (18, 30, 31, 0, 0.6),
            (19, 30, 31, 0, 0.4),
            (1, 31, 31.5, 1, 1.4),
            (2, 31, 31.5, 1, 0),
            (3, 31, 31.5, 0, 0),
            (16, 31, 31.5, 1.57, 1.57),
            (17, 31, 31.5, 1.4, 1.35),
            (18, 31, 31.5, 0.6, 1.1),
            (19, 31, 31.5, 0.4, 0),
            (1, 31.5, 32, 1.4, 1.1),
            (2, 31.5, 32, 0, 0),
            (3, 31.5, 32, 0, 0),
            (16, 31.5, 32, 1.57, 1.57),
            (17, 31.5, 32, 1.35, 1.25),
            (18, 31.5, 32, 1.1, 1.57),
            (19, 31.5, 32, 0, 0),
            (1, 32.5, 33, 1.1, 0),
            (2, 32.5, 33, 0, 0),
            (3, 32.5, 33, 0, 0),
            (16, 32.5, 33, 1.57, 0),
            (17, 32.5, 33, 1.35, 0),
            (18, 32.5, 33, 1.57, 0),
            (19, 32.5, 33, 0, 0),
            (5, 34, 35, 0, 1),
            (6, 34, 35, 0, 1),
            (7, 34, 35, 0, 0),
            (16, 34, 35, 0, 1.4),
            (17, 34, 35, 0, 1.57),
            (18, 34, 35, 0, 0.6),
            (19, 34, 35, 0, 0.4),
            (5, 35, 35.5, 1, 1.4),
            (6, 35, 35.5, 1, 0),
            (7, 35, 35.5, 0, 0),
            (16, 35, 35.5, 1.4, 1.4),
            (17, 35, 35.5, 1.57, 1.57),
            (18, 35, 35.5, 0.6, 1.1),
            (19, 35, 35.5, 0.4, 0),
            (5, 35.5, 36, 1.4, 1.1),
            (6, 35.5, 36, 0, 0),
            (7, 35.5, 36, 0, 0),
            (16, 35.5, 36, 1.4, 1.4),
            (17, 35.5, 36, 1.57, 1.57),
            (18, 35.5, 36, 1.1, 1.57),
            (19, 35.5, 36, 0, 0),
            (5, 36.5, 37, 1.1, 0),
            (6, 36.5, 37, 0, 0),
            (7, 36.5, 37, 0, 0),
            (16, 36.5, 37, 1.4, 0),
            (17, 36.5, 37, 1.57, 0),
            (18, 36.5, 37, 1.57, 0),
            (19, 36.5, 37, 0, 0),
            (9, 38, 39, 0, 1.2),
            (10, 38, 39, 0, 1),
            (11, 38, 39, 0, 0),
            (16, 38, 39, 0, 0.9),
            (17, 38, 39, 0, 1.57),
            (18, 38, 39, 0, 0.7),
            (19, 38, 39, 0, 0.4),
            (9, 39, 39.5, 1.2, 1.7),
            (10, 39, 39.5, 1, 0),
            (11, 39, 39.5, 0, 0),
            (16, 39, 39.5, 0.9, 0.9),
            (17, 39, 39.5, 1.57, 1.57),
            (18, 39, 39.5, 0.7, 1.3),
            (19, 39, 39.5, 0.4, 0),
            (9, 39.5, 40, 1.7, 1.4),
            (10, 39.5, 40, 0, 0),
            (11, 39.5, 40, 0, 0),
            (16, 39.5, 40, 0.9, 0.9),
            (17, 39.5, 40, 1.57, 1.57),
            (18, 39.5, 40, 1.3, 1.57),
            (19, 39.5, 40, 0, 0),
            (9, 40.5, 41, 1.4, 0),
            (10, 40.5, 41, 0, 0),
            (11, 40.5, 41, 0, 0),
            (16, 40.5, 41, 0.9, 0),
            (17, 40.5, 41, 1.57, 0),
            (18, 40.5, 41, 1.57, 0),
            (19, 40.5, 41, 0, 0),
            (13, 42, 43, 0, 1.3),
            (14, 42, 43, 0, 1.1),
            (15, 42, 43, 0, 0),
            (16, 42, 43, 0, 0.5),
            (17, 42, 43, 0, 1.57),
            (18, 42, 43, 0, 1.3),
            (19, 42, 43, 0, 0.2),
            (13, 43, 43.5, 1.3, 1.57),
            (14, 43, 43.5, 1.1, 0),
            (15, 43, 43.5, 0, 0),
            (16, 43, 43.5, 0.5, 0.5),
            (17, 43, 43.5, 1.57, 1.57),
            (18, 43, 43.5, 1.3, 1.4),
            (19, 43, 43.5, 0.4, 0),
            (13, 43.5, 44, 1.57, 1.57),
            (14, 43.5, 44, 0, 0),
            (15, 43.5, 44, 0, 0),
            (16, 43.5, 44, 0.5, 0.5),
            (17, 43.5, 44, 1.57, 1.57),
            (18, 43.5, 44, 1.4, 1.57),
            (19, 43.5, 44, 0, 0),
            (13, 44.5, 45, 1.57, 0),
            (14, 44.5, 45, 0, 0),
            (15, 44.5, 45, 0, 0),
            (16, 44.5, 45, 0.5, 0),
            (17, 44.5, 45, 1.57, 0),
            (18, 44.5, 45, 1.57, 0),
            (19, 44.5, 45, 0, 0),
        ]
        return [list(profile) for profile in raw_profiles]

    def compute_sine_motion(
        self, current_time: float, start_time: float, end_time: float,
        start_pos: float, end_pos: float
    ) -> Optional[float]:
        """Return motor position at time t based on smooth sine interpolation."""
        if current_time < start_time or current_time > end_time:
            return None
        duration = end_time - start_time
        phase = (current_time - start_time) / duration
        return start_pos + (end_pos - start_pos) * 0.5 * (1 - math.cos(math.pi * phase))

    def execute_motion_sequence(self):
        """Main loop to execute motion sequence in real-time."""
        start_time = time.time()

        while True:
            elapsed_time = time.time() - start_time

            for motor_id, t_start, t_end, pos_start, pos_end in self.motion_profiles:
                interpolated_pos = self.compute_sine_motion(
                    elapsed_time, t_start, t_end, pos_start, pos_end
                )
                if interpolated_pos is not None:
                    if 0 <= motor_id < self.num_motors:
                        self.control_values[motor_id] = interpolated_pos
                    else:
                        raise IndexError(f"Invalid motor_id: {motor_id}")

            self.rapid_hand.set_pos(self.control_values)
            print(f"[{elapsed_time:.2f}s] Motor positions: {self.control_values}")
            time.sleep(0.01)


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description="Run motion sequence on Rapid Hand")
    parser.add_argument(
        "-p", "--motor_port", type=str, default="/dev/ttyUSB0",
        help="Serial port for motor communication (e.g., /dev/ttyUSB0)"
    )
    return parser.parse_args()


if __name__ == "__main__":
    args = parse_args()
    controller = HandMotionController(args.motor_port)
    controller.execute_motion_sequence()
